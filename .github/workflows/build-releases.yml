name: Build and Release Electron App

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Install dependencies
        working-directory: .
        run: npm ci

      - name: Build Electron app
        working-directory: .
        env:
          CI: true
        run: npm run make

      - name: Prepare Linux Assets
        if: runner.os == 'Linux'
        run: |



          echo "LINUX_ASSETS=./out/make/deb/*/*.deb ./out/make/rpm/*/*.rpm" >> $GITHUB_ENV

      - name: Prepare Windows Assets
        if: runner.os == 'Windows'
        run: |
          echo "WINDOWS_ASSETS=./out/make/squirrel.windows/**/*" >> $GITHUB_ENV

      - name: Prepare macOS Assets
        if: runner.os == 'macOS'
        run: |
          echo "MACOS_ASSETS=./out/make/*.zip" >> $GITHUB_ENV

      - name: Upload Build Artifacts for Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build-artifacts
          path: |
            ./out/make/**/*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/macos-latest-build-artifacts/out/make/*.zip
            artifacts/ubuntu-latest-build-artifacts/out/make/deb/*/*.deb
            artifacts/ubuntu-latest-build-artifacts/out/make/rpm/*/*.rpm
            artifacts/windows-latest-build-artifacts/out/make/squirrel.windows/**/*
